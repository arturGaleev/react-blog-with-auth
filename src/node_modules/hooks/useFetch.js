import {useEffect, useState} from 'react'

export default url => {
  const baseUrl = 'api/'
  const [isLoading, setIsLoading] = useState(false)
  const [response, setResponse] = useState(null)
  const [error, setError] = useState(null)
  const [options, setOptions] = useState({})

  const doFetch = (options = {}) => {
    setOptions(options)
    setIsLoading(true)
  }

  useEffect(() => {
    if (!isLoading) {
      return
    }
    const promise = new Promise(function (resolve, reject) {
      setTimeout(() => {
        resolve(options)
      }, 2000)
    })
    promise
      .then(val => {
        val.data.user.token = 'asknvhxzasdfnkjlasdf.sdfsdfsfxzcvqewr.sdfasdfasdfasdf'
        setResponse(val.data)
      })
      .catch(e => {
        setError(e)
      })
      .finally(() => {
        setIsLoading(false)
      })
  }, [isLoading])

  return [{ isLoading, response, error }, doFetch]
}
