import {useEffect, useContext} from 'react'

import useFetch from 'hooks/useFetch'
import {CurrentUserContext} from 'context/currentUser'
import useLocalStorage from 'hooks/useLocalStorage'

const CurrentUserChecker = ({children}) => {
  const [{response}, doFetch] = useFetch('/user')
  const [, dispatch] = useContext(CurrentUserContext)
  const [token] = useLocalStorage('token')
  // Начало запроса
  useEffect(()=>{
    if (!token) {
      dispatch({type: 'SET_UNAUTHORIZED'})
      return
    }
    doFetch()
    dispatch({type: 'LOADING'})
    // Контекст пользователя
    // setCurrentUserState(state => ({
    //   ...state,
    //   isLoading: true
    // }))
  }, [token, dispatch, doFetch])
  // После ответа от сервера
  useEffect(()=>{
    if (!response) {
      return
    }
    dispatch({
      type: 'SET_AUTHORIZED',
      payload: response.user
    })
    // Контекст пользователя
    // setCurrentUserState(state => ({
    //   ...state,
    //   isLoggedIn: true,
    //   isLoading: false,
    //   currentUser: response.user
    // }))

  }, [response, dispatch])

  return children
}

export default CurrentUserChecker
