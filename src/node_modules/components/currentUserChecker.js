import {useEffect, useContext} from 'react'

import useFetch from 'hooks/useFetch'
import {CurrentUserContext} from 'context/currentUser'
import useLocalStorage from 'hooks/useLocalStorage'

const CurrentUserChecker = ({children}) => {
  const [{response}, doFetch] = useFetch('/user')
  const [, setCurrentUserState] = useContext(CurrentUserContext)
  const [token] = useLocalStorage('token')
  // Начало запроса
  useEffect(()=>{
    if (!token) {
      setCurrentUserState(state => ({
        ...state,
        isLoggedIn: false
      }))
      return
    }
    doFetch()
    // Контекст пользователя
    setCurrentUserState(state => ({
      ...state,
      isLoading: true
    }))
  }, [token, setCurrentUserState, doFetch])
  // После ответа от сервера
  useEffect(()=>{
    if (!response) {
      return
    }
    // Контекст пользователя
    setCurrentUserState(state => ({
      ...state,
      isLoggedIn: true,
      isLoading: false,
      currentUser: response.user
    }))

  }, [response, setCurrentUserState])

  return children
}

export default CurrentUserChecker
