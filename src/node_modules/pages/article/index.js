import React, {useEffect, useContext, useState} from 'react'
import {Link} from 'react-router-dom'
import { Redirect } from 'react-router-dom'

import useFetch from 'hooks/useFetch'
import Loading from 'components/loading'
import ErrorMessage from 'components/errorMessage'
import TagList from 'components/tagList'
import { CurrentUserContext } from 'context/currentUser'

const Article = (props) => {
  const slug = props.match.params.slug
  const apiUrl = `/articles/${slug}`
  const [{response, isLoading, error}, doFetch] = useFetch(apiUrl)
  const [{response: deleteArticleResponse }, doDeleteArticle] = useFetch(apiUrl)
  const [currentUserState] = useContext(CurrentUserContext)
  const [isSuccessFullDelete, setIsSuccessFullDelete] = useState(false)

  const isAuthor = () => {
    if (!response || !currentUserState.isLoggedIn) {
      return false
    }

    return response.article.author.username === currentUserState.currentUser.username
  }

  const deleteArticle = () => {
    doDeleteArticle({
      method: 'delete'
    })
    console.log('deleteArticle')
  }

  useEffect(() => {
    doFetch()
  }, [doFetch])

  useEffect(() => {
    if (!deleteArticleResponse) {
      return
    }

    setIsSuccessFullDelete(true)
  }, [deleteArticleResponse])

  if (isSuccessFullDelete) {
    return <Redirect to='/' />
  }

  return (
    <div className='article-page'>
      <div className="banner">
        {!isLoading && response && (
          <div className="container">
            <h1>{response.article.title}</h1>
            <div className="article-meta">
              <Link to={`/profile/${response.article.author.username}`}>
                <img src={response.article.author.image} alt="" />
              </Link>
              <div className="info">
                <Link to={`/profile/${response.article.author.username}`}>
                  {response.article.author.username}
                </Link>
                <span className="date">{response.article.createdAt}</span>
              </div>
              {isAuthor() && (
                <span>
                  <Link
                    className="btn"
                    to={`/articles/${response.article.slug}/edit`}
                  >
                    Редактировать
                  </Link>
                  <button className="btn"
                    onClick={deleteArticle}
                  >
                    Удалить
                  </button>
                </span>
              )}
            </div>
          </div>
        )}
      </div>
      {isLoading && <Loading />}
      {error && <ErrorMessage />}
      {!isLoading && response && (
        <div>
          <p>{response.article.body}</p>
          <TagList tags={response.article.tagList} />
        </div>
      )}
    </div>
  )
}

export default Article
